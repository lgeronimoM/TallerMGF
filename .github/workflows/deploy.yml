# .github/workflows/deploy.yml
name: Deploy TallerMGF to Local Kubernetes

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🔍 Verificar herramientas
      run: |
        echo "🐳 Verificando Docker..."
        docker --version
        echo "☸️ Verificando kubectl..."
        kubectl version --client
        echo "📦 Verificando conexión al cluster..."
        kubectl cluster-info

    - name: 🏗️ Construir imagen Docker
      run: |
        echo "🔨 Construyendo imagen tallermgf..."
        docker build -t tallermgf:latest .
        docker build -t tallermgf:${{ github.sha }} .
        echo "✅ Imagen construida exitosamente"

    - name: 🚀 Desplegar a Kubernetes
      run: |
        echo "📋 Aplicando manifiestos..."
        
        # Aplicar namespace primero
        kubectl apply -f k8s/namespace.yaml
        
        # Actualizar el deployment con la nueva imagen
        kubectl patch deployment tallermgf -n tallermgf -p '{"spec":{"template":{"spec":{"containers":[{"name":"tallermgf","image":"tallermgf:latest","imagePullPolicy":"Never"}]}}}}'
        
        # Aplicar el resto de manifiestos
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: ⏳ Esperar deployment
      run: |
        echo "🕐 Esperando que el deployment esté listo..."
        kubectl wait --for=condition=available --timeout=300s deployment/tallermgf -n tallermgf
        
    - name: 🔄 Reiniciar deployment (para nueva imagen)
      run: |
        echo "🔄 Reiniciando deployment para usar nueva imagen..."
        kubectl rollout restart deployment/tallermgf -n tallermgf
        kubectl rollout status deployment/tallermgf -n tallermgf --timeout=300s

    - name: ✅ Verificar estado
      run: |
        echo "📊 Estado del deployment:"
        kubectl get pods -n tallermgf
        echo ""
        echo "🌐 Servicios:"
        kubectl get svc -n tallermgf
        echo ""
        echo "🔗 Ingress:"
        kubectl get ingress -n tallermgf

    - name: 📝 Información de acceso
      run: |
        echo ""
        echo "🎉 ¡Deployment completado!"
        echo "==============================="
        echo "🌍 URL: http://tallermgf.local"
        echo "🏥 Health: http://tallermgf.local/health"
        echo ""
        echo "Para verificar que todo funciona:"
        echo "  kubectl logs -f deployment/tallermgf -n tallermgf"
        echo ""
        echo "Para acceder localmente (si no tienes ingress):"
        echo "  kubectl port-forward svc/tallermgf-service 8080:80 -n tallermgf"
        echo "  Luego visita: http://localhost:8080"
