name: Deploy TallerMGF (GHCR p√∫blico)

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4

    - name: üîç Tools
      run: |
        echo "üê≥ Docker:" && docker --version
        echo "‚ò∏Ô∏è Kubectl (client):" && kubectl version --client=true
        echo "üì¶ Cluster:" && kubectl cluster-info

    - name: üîê Login a GHCR (con GITHUB_TOKEN)
      env:
        CR_PAT: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "$CR_PAT" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: üèóÔ∏è Build & Push a GHCR (tag = SHA)
      env:
        OWNER: ${{ github.repository_owner }}
        IMAGE_SHA: ghcr.io/${{ github.repository_owner }}/tallermgf:${{ github.sha }}
      run: |
        docker build -t tallermgf:latest .
        docker tag tallermgf:latest "$IMAGE_SHA"
        docker push "$IMAGE_SHA"
        echo "IMAGE_SHA=$IMAGE_SHA" >> $GITHUB_ENV
        echo "OWNER=$OWNER" >> $GITHUB_ENV

    - name: üöÄ Deploy a Kubernetes
      run: |
        kubectl apply -f k8s/namespace.yaml
        # Reemplaza SOLO la l√≠nea 'image:' por la imagen con SHA
        sed -E 's|^(\s*image:\s*).*$|\1'"${IMAGE_SHA}"'|' k8s/deployment.yaml > /tmp/deployment-temp.yaml
        kubectl apply -f /tmp/deployment-temp.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: ‚è≥ Esperar rollout
      run: kubectl rollout status deployment/tallermgf -n tallermgf --timeout=300s

    - name: ‚úÖ Verificaci√≥n
      run: |
        kubectl -n tallermgf get pods -o wide
        kubectl -n tallermgf get events --sort-by=.lastTimestamp | tail -50

    - name: üß∞ Diagn√≥stico si falla
      if: failure()
      run: |
        kubectl -n tallermgf describe deployment/tallermgf || true
        kubectl -n tallermgf describe pods || true
        kubectl -n tallermgf get events --sort-by='.lastTimestamp' | tail -100 || true
