name: Deploy TallerMGF (simple)

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted
    env:
      IMAGE: okteto/sample-app:latest   # ‚Üê c√°mbiala por TU imagen p√∫blica si quieres

    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4

    - name: üîç Herramientas
      run: |
        echo "üê≥ Docker:" && docker --version || true
        echo "‚ò∏Ô∏è Kubectl (client):" && kubectl version --client=true
        echo "üì¶ Cluster:" && kubectl cluster-info

    - name: üöÄ Deploy (apply manifests)
      run: |
        # Namespace primero
        kubectl apply -f k8s/namespace.yaml

        # Reemplaza SOLO la l√≠nea 'image:' en el deployment con la imagen deseada
        sed -E 's|^(\s*image:\s*).*$|\1'"${IMAGE}"'|' k8s/deployment.yaml > /tmp/deployment.yaml

        # Aplica deployment, service, ingress
        kubectl apply -f /tmp/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: ‚è≥ Esperar rollout
      run: kubectl -n tallermgf rollout status deploy/tallermgf --timeout=300s

    - name: ‚úÖ Verificaci√≥n
      run: |
        kubectl -n tallermgf get deploy,pods,svc,ingress -o wide
        kubectl -n tallermgf get events --sort-by=.lastTimestamp | tail -50

    - name: üß∞ Diagn√≥stico si falla
      if: failure()
      run: |
        kubectl -n tallermgf describe deployment/tallermgf || true
        kubectl -n tallermgf describe pods || true
        kubectl -n tallermgf get events --sort-by='.lastTimestamp' | tail -150 || true
